import "./chunk-5WRI5ZAA.js";

// node_modules/gsap-trial/DrawSVGPlugin.js
var e;
var t;
var n;
var i;
var r;
var s;
var o;
var a;
var l = () => "undefined" != typeof window;
var d = () => e || l() && (e = window.gsap) && e.registerPlugin && e;
var h = /[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi;
var f = { rect: ["width", "height"], circle: ["r", "r"], ellipse: ["rx", "ry"], line: ["x2", "y2"] };
var g = (e2) => Math.round(1e4 * e2) / 1e4;
var c = (e2) => parseFloat(e2) || 0;
var u = (e2, t2) => {
  let n2 = c(e2);
  return ~e2.indexOf("%") ? n2 / 100 * t2 : n2;
};
var w = (e2, t2) => c(e2.getAttribute(t2));
var p = Math.sqrt;
var _ = (e2, t2, n2, i2, r2, s2) => p(((c(n2) - c(e2)) * r2) ** 2 + ((c(i2) - c(t2)) * s2) ** 2);
var y = (e2) => console.warn(e2);
var x = (e2) => "non-scaling-stroke" === e2.getAttribute("vector-effect");
var m = function() {
  return String.fromCharCode.apply(null, arguments);
};
var k = m(103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109);
var v = function(e2) {
  var t2 = "undefined" != typeof window, n2 = 0 === (t2 ? window.location.href : "").indexOf(m(102, 105, 108, 101, 58, 47, 47)) || -1 !== e2.indexOf(m(108, 111, 99, 97, 108, 104, 111, 115, 116)) || -1 !== e2.indexOf(m(49, 50, 55, 46, 48, 32, 48, 46, 49)), i2 = [k, m(99, 111, 100, 101, 112, 101, 110, 46, 105, 111), m(99, 111, 100, 101, 112, 101, 110, 46, 112, 108, 117, 109, 98, 105, 110, 103), m(99, 111, 100, 101, 112, 101, 110, 46, 100, 101, 118), m(99, 111, 100, 101, 112, 101, 110, 46, 97, 112, 112), m(99, 111, 100, 101, 112, 101, 110, 46, 119, 101, 98, 115, 105, 116, 101), m(112, 101, 110, 115, 46, 99, 108, 111, 117, 100), m(99, 115, 115, 45, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), m(99, 100, 112, 110, 46, 105, 111), m(112, 101, 110, 115, 46, 105, 111), m(103, 97, 110, 110, 111, 110, 46, 116, 118), m(99, 111, 100, 101, 99, 97, 110, 121, 111, 110, 46, 110, 101, 116), m(116, 104, 101, 109, 101, 102, 111, 114, 101, 115, 116, 46, 110, 101, 116), m(99, 101, 114, 101, 98, 114, 97, 120, 46, 99, 111, 46, 117, 107), m(116, 121, 109, 112, 97, 110, 117, 115, 46, 110, 101, 116), m(116, 119, 101, 101, 110, 109, 97, 120, 46, 99, 111, 109), m(112, 108, 110, 107, 114, 46, 99, 111), m(104, 111, 116, 106, 97, 114, 46, 99, 111, 109), m(119, 101, 98, 112, 97, 99, 107, 98, 105, 110, 46, 99, 111, 109), m(97, 114, 99, 104, 105, 118, 101, 46, 111, 114, 103), m(99, 111, 100, 101, 115, 97, 110, 100, 98, 111, 120, 46, 105, 111), m(99, 115, 98, 46, 97, 112, 112), m(115, 116, 97, 99, 107, 98, 108, 105, 116, 122, 46, 99, 111, 109), m(115, 116, 97, 99, 107, 98, 108, 105, 116, 122, 46, 105, 111), m(99, 111, 100, 105, 101, 114, 46, 105, 111), m(109, 111, 116, 105, 111, 110, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), m(115, 116, 97, 99, 107, 111, 118, 101, 114, 102, 108, 111, 119, 46, 99, 111, 109), m(115, 116, 97, 99, 107, 101, 120, 99, 104, 97, 110, 103, 101, 46, 99, 111, 109), m(106, 115, 102, 105, 100, 100, 108, 101, 46, 110, 101, 116)], r2 = function() {
    t2 && ("loading" === document.readyState || "interactive" === document.readyState ? document.addEventListener("readystatechange", r2) : (document.removeEventListener("readystatechange", r2), t2 && window.console && !window._gsapWarned && "object" == typeof window.gsap && false !== window.gsap.config().trialWarn && (console.log(m(37, 99, 87, 97, 114, 110, 105, 110, 103), m(102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 51, 48, 112, 120, 59, 99, 111, 108, 111, 114, 58, 114, 101, 100, 59)), console.log(m(65, 32, 116, 114, 105, 97, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32) + "DrawSVGPlugin" + m(32, 105, 115, 32, 108, 111, 97, 100, 101, 100, 32, 116, 104, 97, 116, 32, 111, 110, 108, 121, 32, 119, 111, 114, 107, 115, 32, 108, 111, 99, 97, 108, 108, 121, 32, 97, 110, 100, 32, 111, 110, 32, 100, 111, 109, 97, 105, 110, 115, 32, 108, 105, 107, 101, 32, 99, 111, 100, 101, 112, 101, 110, 46, 105, 111, 32, 97, 110, 100, 32, 99, 111, 100, 101, 115, 97, 110, 100, 98, 111, 120, 46, 105, 111, 46, 32, 42, 42, 42, 32, 68, 79, 32, 78, 79, 84, 32, 68, 69, 80, 76, 79, 89, 32, 84, 72, 73, 83, 32, 70, 73, 76, 69, 32, 42, 42, 42, 32, 76, 111, 97, 100, 105, 110, 103, 32, 105, 116, 32, 111, 110, 32, 97, 110, 32, 117, 110, 97, 117, 116, 104, 111, 114, 105, 122, 101, 100, 32, 115, 105, 116, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 116, 104, 101, 32, 108, 105, 99, 101, 110, 115, 101, 32, 97, 110, 100, 32, 119, 105, 108, 108, 32, 99, 97, 117, 115, 101, 32, 97, 32, 114, 101, 100, 105, 114, 101, 99, 116, 46, 32, 80, 108, 101, 97, 115, 101, 32, 106, 111, 105, 110, 32, 67, 108, 117, 98, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 32, 116, 111, 32, 103, 101, 116, 32, 102, 117, 108, 108, 32, 97, 99, 99, 101, 115, 115, 32, 116, 111, 32, 116, 104, 101, 32, 98, 111, 110, 117, 115, 32, 112, 108, 117, 103, 105, 110, 115, 32, 116, 104, 97, 116, 32, 98, 111, 111, 115, 116, 32, 121, 111, 117, 114, 32, 97, 110, 105, 109, 97, 116, 105, 111, 110, 32, 115, 117, 112, 101, 114, 112, 111, 119, 101, 114, 115, 46, 32, 68, 105, 115, 97, 98, 108, 101, 32, 116, 104, 105, 115, 32, 119, 97, 114, 110, 105, 110, 103, 32, 119, 105, 116, 104, 32, 103, 115, 97, 112, 46, 99, 111, 110, 102, 105, 103, 40, 123, 116, 114, 105, 97, 108, 87, 97, 114, 110, 58, 32, 102, 97, 108, 115, 101, 125, 41, 59)), console.log(m(37, 99, 71, 101, 116, 32, 117, 110, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 102, 105, 108, 101, 115, 32, 97, 116, 32, 104, 116, 116, 112, 115, 58, 47, 47, 103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109, 47, 99, 108, 117, 98), m(102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 54, 112, 120, 59, 99, 111, 108, 111, 114, 58, 35, 52, 101, 57, 56, 49, 53)), window._gsapWarned = 1)));
  }, s2 = i2.length;
  for (setTimeout(r2, 50); --s2 > -1; ) if (-1 !== e2.indexOf(i2[s2])) return true;
  return n2 || !setTimeout(function() {
    t2 && (window.location.href = m(104, 116, 116, 112, 115, 58, 47, 47) + k + m(47, 114, 101, 113, 117, 105, 114, 101, 115, 45, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 47) + "?plugin=DrawSVGPlugin&source=trial");
  }, 3e3);
}("undefined" != typeof window ? window.location.host : "");
var b = (e2) => {
  if (!(e2 = t(e2)[0])) return 0;
  let n2, i2, r2, o2, a2, l2, d2, c2 = e2.tagName.toLowerCase(), u2 = e2.style, m2 = 1, k2 = 1;
  x(e2) && (k2 = e2.getScreenCTM(), m2 = p(k2.a * k2.a + k2.b * k2.b), k2 = p(k2.d * k2.d + k2.c * k2.c));
  try {
    i2 = e2.getBBox();
  } catch (e3) {
    y("Some browsers won't measure invisible elements (like display:none or masks inside defs).");
  }
  let { x: v2, y: b2, width: P2, height: S2 } = i2 || { x: 0, y: 0, width: 0, height: 0 };
  if (i2 && (P2 || S2) || !f[c2] || (P2 = w(e2, f[c2][0]), S2 = w(e2, f[c2][1]), "rect" !== c2 && "line" !== c2 && (P2 *= 2, S2 *= 2), "line" === c2 && (v2 = w(e2, "x1"), b2 = w(e2, "y1"), P2 = Math.abs(P2 - v2), S2 = Math.abs(S2 - b2))), "path" === c2) o2 = u2.strokeDasharray, u2.strokeDasharray = "none", n2 = e2.getTotalLength() || 0, g(m2) !== g(k2) && !s && (s = 1) && y("Warning: <path> length cannot be measured when vector-effect is non-scaling-stroke and the element isn't proportionally scaled."), n2 *= (m2 + k2) / 2, u2.strokeDasharray = o2;
  else if ("rect" === c2) n2 = 2 * P2 * m2 + 2 * S2 * k2;
  else if ("line" === c2) n2 = _(v2, b2, v2 + P2, b2 + S2, m2, k2);
  else if ("polyline" === c2 || "polygon" === c2) for (r2 = e2.getAttribute("points").match(h) || [], "polygon" === c2 && r2.push(r2[0], r2[1]), n2 = 0, a2 = 2; a2 < r2.length; a2 += 2) n2 += _(r2[a2 - 2], r2[a2 - 1], r2[a2], r2[a2 + 1], m2, k2) || 0;
  else "circle" !== c2 && "ellipse" !== c2 || (l2 = P2 / 2 * m2, d2 = S2 / 2 * k2, n2 = Math.PI * (3 * (l2 + d2) - p((3 * l2 + d2) * (l2 + 3 * d2))));
  return n2 || 0;
};
var P = (e2, i2) => {
  if (!(e2 = t(e2)[0])) return [0, 0];
  i2 || (i2 = b(e2) + 1);
  let r2 = n.getComputedStyle(e2), s2 = r2.strokeDasharray || "", o2 = c(r2.strokeDashoffset), a2 = s2.indexOf(",");
  return a2 < 0 && (a2 = s2.indexOf(" ")), s2 = a2 < 0 ? i2 : c(s2.substr(0, a2)), s2 > i2 && (s2 = i2), [-o2 || 0, s2 - o2 || 0];
};
var S = () => {
  l() && (n = window, r = e = d(), t = e.utils.toArray, o = e.core.getStyleSaver, a = e.core.reverting || function() {
  }, i = -1 !== ((n.navigator || {}).userAgent || "").indexOf("Edge"));
};
var O = { version: "3.11.3", name: "drawSVG", register(t2) {
  e = t2, S();
}, init(e2, t2, s2, a2, l2) {
  if (!e2.getBBox) return false;
  r || S();
  let d2, h2, f2, w2 = b(e2);
  return this.styles = o && o(e2, "strokeDashoffset,strokeDasharray,strokeMiterlimit"), this.tween = s2, this._style = e2.style, this._target = e2, t2 + "" == "true" ? t2 = "0 100%" : t2 ? -1 === (t2 + "").indexOf(" ") && (t2 = "0 " + t2) : t2 = "0 0", d2 = P(e2, w2), h2 = ((e3, t3, n2) => {
    let i2, r2, s3 = e3.indexOf(" ");
    return s3 < 0 ? (i2 = void 0 !== n2 ? n2 + "" : e3, r2 = e3) : (i2 = e3.substr(0, s3), r2 = e3.substr(s3 + 1)), i2 = u(i2, t3), r2 = u(r2, t3), i2 > r2 ? [r2, i2] : [i2, r2];
  })(t2, w2, d2[0]), this._length = g(w2), this._dash = g(d2[1] - d2[0]), this._offset = g(-d2[0]), this._dashPT = this.add(this, "_dash", this._dash, g(h2[1] - h2[0]), 0, 0, 0, 0, 0, 1), this._offsetPT = this.add(this, "_offset", this._offset, g(-h2[0]), 0, 0, 0, 0, 0, 1), i && (f2 = n.getComputedStyle(e2), f2.strokeLinecap !== f2.strokeLinejoin && (h2 = c(f2.strokeMiterlimit), this.add(e2.style, "strokeMiterlimit", h2, h2 + 0.01))), this._live = x(e2) || ~(t2 + "").indexOf("live"), this._nowrap = ~(t2 + "").indexOf("nowrap"), this._props.push("drawSVG"), v;
}, render(e2, t2) {
  if (t2.tween._time || !a()) {
    let n2, i2, r2, s2, o2 = t2._pt, a2 = t2._style;
    if (o2) {
      for (t2._live && (n2 = b(t2._target), n2 !== t2._length && (i2 = n2 / t2._length, t2._length = n2, t2._offsetPT && (t2._offsetPT.s *= i2, t2._offsetPT.c *= i2), t2._dashPT ? (t2._dashPT.s *= i2, t2._dashPT.c *= i2) : t2._dash *= i2)); o2; ) o2.r(e2, o2.d), o2 = o2._next;
      r2 = t2._dash || (e2 && 1 !== e2 ? 1e-4 : 0), n2 = t2._length - r2 + 0.1, s2 = t2._offset, r2 && s2 && r2 + Math.abs(s2 % t2._length) > t2._length - 0.2 && (s2 += s2 < 0 ? 0.1 : -0.1) && (n2 += 0.1), a2.strokeDashoffset = r2 ? s2 : s2 + 1e-3, a2.strokeDasharray = n2 < 0.2 ? "none" : r2 ? r2 + "px," + (t2._nowrap ? 999999 : n2) + "px" : "0px, 999999px";
    }
  } else t2.styles.revert();
}, getLength: b, getPosition: P };
d() && e.registerPlugin(O);
var DrawSVGPlugin_default = O;
export {
  O as DrawSVGPlugin,
  DrawSVGPlugin_default as default
};
/*! Bundled license information:

gsap-trial/DrawSVGPlugin.js:
  (*!
   * DrawSVGPlugin 3.11.3
   * https://greensock.com
   * 
   * @license Copyright 2022, GreenSock. All rights reserved.
   * *** DO NOT DEPLOY THIS FILE ***
   * This is a trial version that only works locally and on domains like codepen.io and codesandbox.io.
   * Loading it on an unauthorized domain violates the license and will cause a redirect.
   * Get the unrestricted file by joining Club GreenSock at https://greensock.com/club
   * @author: Jack Doyle, jack@greensock.com
   *)
*/
//# sourceMappingURL=gsap-trial_DrawSVGPlugin.js.map
